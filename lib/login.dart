import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:tikiti/admin-index.dart';
import 'package:tikiti/index.dart' as tikiti;


// Generated by: https://www.figma.com/community/plugin/842128343887142055/
class FigmaToCodeApp extends StatelessWidget {
  const FigmaToCodeApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color.fromARGB(255, 18, 32, 47),
      ),
      home: Scaffold(
        body: ListView(children: [
          Login(),
        ]),
      ),
    );
  }
}

class Login extends StatelessWidget {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Login'),
      ),
      body: ListView(
        children: [
        Container(
          width: 305,
          height: 800,
          clipBehavior: Clip.antiAlias,
          decoration: ShapeDecoration(
            color: Color.fromARGB(255, 255, 255, 255),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(10),
            ),
          ),
          child: Stack(
            children: [

              Positioned(
                left: 131,
                top: 100,
                child: Container(
                  width: 102,
                  height: 89,
                  decoration: ShapeDecoration(
                    image: DecorationImage(
                      image: AssetImage("assets/Tikiti.png"),
                      fit: BoxFit.fill,
                    ),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                ),
              ),

              
              Positioned(
                left: 59,
                top: 429,
                child: GestureDetector(
                  onTap: () {
                    // TODO: Implement checkbox functionality
                  },
                  child: Container(
                    width: 25,
                    height: 25,
                    decoration: BoxDecoration(
                      color: Colors.yellow, // Set the color to yellow
                      borderRadius: BorderRadius.circular(4), // Add rounded corners
                    ),
                    child: const Icon(
                      Icons.check,
                      color: Colors.white,
                      size: 18,
                    ),
                  ),
                ),
              ),
                Positioned(
                left: 59,
                top: 240,
                child: Container(
                  width: 248,
                  height: 42,
                  decoration: const BoxDecoration(
                  color: Color(0xC6F6F6F6),
                  border: Border(
                    bottom: BorderSide(width: 1, color: Color(0xFFFF3D00)),
                  ),
                  ),
                  child: TextField(
                  controller: _emailController,
                  style: TextStyle(color: Colors.black), // Set the text color to black
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    hintText: 'Enter your text',
                  ),
                  ),
                ),
                ),
              const Positioned(
                left: 44,
                top: 320,
                child: Text(
                  'Password',
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 10,
                    fontFamily: 'Kaisei Decol',
                    fontWeight: FontWeight.w400,
                    height: 0,
                  ),
                ),
              ),
                Positioned(
                left: 59,
                top: 349,
                child: Container(
                  width: 248,
                  height: 42,
                  decoration: const BoxDecoration(
                  color: Color(0xC6F6F6F6),
                  border: Border(
                    bottom: BorderSide(width: 1, color: Color(0xFFFF3D00)),
                  ),
                  ),
                  child: TextField(
                  controller: _passwordController,
                  style: TextStyle(color: Colors.black), // Set the text color to black
                  decoration: const InputDecoration(
                    border: InputBorder.none,
                    hintText: 'Enter your text',
                  ),
                  ),
                ),
                ),
              const Positioned(
                left: 43,
                top: 221,
                child: Text(
                  'Email',
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 10,
                    fontFamily: 'Kaisei Decol',
                    fontWeight: FontWeight.w400,
                    height: 0,
                  ),
                ),
              ),
              const Positioned(
                left: 100,
                top: 435,
                child: Text(
                  'Keep Me signed In',
                  style: TextStyle(
                    color: Colors.black,
                    fontSize: 10,
                    fontFamily: 'Kaisei Decol',
                    fontWeight: FontWeight.w400,
                    height: 0,
                  ),
                ),
              ),
              Positioned(
                left: 56,
                top: 483,
                child: GestureDetector(
                  onTap: () {
  FirebaseAuth.instance
      .signInWithEmailAndPassword(
        email: _emailController.text,
        password: _passwordController.text,
      )
      .then((userCredential) {
        // Ensure the user is not null
        if (userCredential.user != null) {
          String userId = userCredential.user!.uid;
          // Fetch the user's role from Firestore
          FirebaseFirestore.instance.collection('accounts').doc(userId).get().then((documentSnapshot) {
            if (documentSnapshot.exists) {
              Map<String, dynamic>? userData = documentSnapshot.data();
              // Ensure userData is not null
              if (userData != null) {
                String? role = userData['role'];
                // Debug print to check role value
                print("User role: $role");
                // Navigate based on the role
                if (role == 'Organiser') {
                  Navigator.push(context, MaterialPageRoute(builder: (context) => Home()));
                } else if (role == 'Participant') {
                  Navigator.push(context, MaterialPageRoute(builder: (context) => tikiti.Index()));
                } else {
                  // Handle unexpected role or null
                  print("Unexpected role or null: $role");
                }
              } else {
                print("User data is null");
              }
            } else {
              print("Document does not exist");
            }
          }).catchError((error) {
            print("Failed to fetch user role: $error");
          });
        } else {
          print("UserCredential.user is null");
        }
      }).catchError((onError) {
    print("Error signing in: $onError");
  });
},
                  child: Container(
                    width: 248,
                    height: 40,
                    decoration: ShapeDecoration(
                      color: const Color(0xFFFF3E01),
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(8),
                      ),
                    ),
                    child: const Center(
                      child: Text(
                        'Login',
                        style: TextStyle(
                          color: Colors.white,
                          fontSize: 16,
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
      ),
    );
    
  }
}
